frequency_by_power
Freq.power <- ggplot(frequency_by_power, aes(x = powerc, y = avg_freq)) +
theme_bw() +
geom_bar(stat = "identity", alpha = .5) +
ggtitle("Horsepower") +
labs(x = "", y = "Claim Frequency") +
theme(plot.title = element_text(hjust = 0.5))
#### 2.1.11 Location of policyholder  ####
# municipal level
frequency_by_Location <- DataFreq %>%
select(LONG, LAT,frequency)
Freq.location <- ggplot(frequency_by_Location, aes(x = LONG, y = LAT, size = frequency)) +
geom_point(alpha = 0.5) +
labs(title = "Claim frequency by location (municipal)") +
scale_size(range = c(1, 10))  # Increase the size of points
frequency_by_Commune <- DataFreq %>%
group_by(COMMUNE) %>%
summarize(avg_freq = sum(nbrtotc)/sum(duree))
# province level
# limit the link
DataFreq_INS1 <- DataFreq %>%
mutate(INS = ifelse(substr(INS, 1, 1) == "2",
ifelse(substr(INS, 1, 2) == "21", "21",
ifelse(substr(INS, 1, 2) %in% c("23", "24"), "23",
ifelse(substr(INS, 1, 2) == "25", "25", "2"))),
substr(INS, 1, 1)))
INS_freq <- DataFreq_INS1 %>%
group_by(INS) %>%
summarise(avg_freq = sum(nbrtotc) / sum(duree))
# Define the mapping dataset for Belgium provinces
province_mapping <- data.frame(INS = c("1","21","23", "25", "3", "4", "5", "6", "7", "8", "9"),
Province = c("Antwerp", "Brussels Capital Region", "Flemish Brabant", "Walloon Brabant", "West Flanders",
"East flanders", "Hainaut", "Liége",
"Limburg", "Luxembourg", "Namur"))
# Merge the mapping dataset with INS_freq based on the INS column
INS_freq_with_province <- merge(INS_freq, province_mapping, by = "INS")
print(INS_freq_with_province)
#### Plot Frequency graphs  ####
grid.arrange(Freq.age, nrow = 1)
grid.arrange(Freq.agecar, Freq.sex, Freq.fuel, Freq.split, Freq.use, Freq.fleet, Freq.sportc, Freq.cover, Freq.power, nrow = 3)
grid.arrange(Freq.location, nrow = 1)
############ Section 2.2 Severity Data #############
#### 2.2.0 Remove outliers  ####
## remove observations without no claims
DataCleaned <- DataSev[which(DataSev$nbrtotc  > 0),]
DataCleaned <- DataSev[which(DataSev$chargtot  > 0),]
## Check for outliers
boxplot(DataCleaned$chargtot, main = "Total claim amount") #many outliers, one extreme outlier 1989567.9
# get mean and Standard deviation
mean = mean(DataCleaned$chargtot)
std = sd(DataCleaned$chargtot)
# get threshold values for outlines
Tmax = mean+(3*std)
Tmax #outliers are all values above 54 286
table(Data$chargtot > Tmax)["TRUE"] #35 values above Tmax2
# We have to be carefull as the distribution is assymetrix. Therefore we investigate the tail above 54 286
ggplot(DataCleaned, aes(x = chargtot)) +
geom_histogram(bins = 100, data = subset(DataCleaned, chargtot > Tmax)) +
scale_x_continuous(breaks = seq(min(DataCleaned$chargtot), max(DataCleaned$chargtot), length.out = 15), labels = comma_format(accuracy = 1)) +
labs(x = "Total claim amount", y = "Frequency", title = "Histogram of tail values") +
theme(plot.title = element_text(hjust = 0.5))
# We visually identify 142,112 as a valid outlier
Tmax2=142112
# find outlier
table(Data$chargtot > Tmax2)["TRUE"] #12 values above Tmax2
Data_no_out <- DataCleaned[which(DataCleaned$chargtot < Tmax2),]
## Check average claim
# With Outliers
avgr_claim <- sum(DataCleaned$chargtot)/sum(DataCleaned$nbrtotc)
avgr_claim #claim mean = 1662.054 per year
# Without Outliers
avgr_claim_no_out <- sum(Data_no_out$chargtot)/sum(Data_no_out$nbrtotc)
avgr_claim_no_out #claim mean = 1347.709 per year
#### 2.2.1 Age of policyholder ####
severity_by_age <- Data_no_out %>%
group_by(AGEPH) %>%
summarise(Claim_sev = sum(chargtot) / sum(nbrtotc))
print(severity_by_age,n=79)
summary(severity_by_age)
Sev.age <- ggplot(severity_by_age, aes(x = AGEPH, y = Claim_sev)) +
theme_bw() +
geom_bar(stat = "identity", alpha = .5) +
ggtitle("Age policyholder") +
labs(x = "", y = "Claim Severity") +
theme(plot.title = element_text(hjust = 0.5))
#### 2.2.2 Age of car ####
severity_by_agecar <- Data_no_out %>%
group_by(agecar) %>%
summarize(Claim_sev = sum(chargtot) / sum(nbrtotc))
severity_by_agecar
summary(severity_by_agecar)
# Convert agecar to a factor with desired order
severity_by_agecar$agecar <- factor(severity_by_agecar$agecar, levels = unique(severity_by_agecar$agecar))
Sev.agecar <- ggplot(severity_by_agecar, aes(x = agecar, y = Claim_sev)) +
theme_bw() +
geom_bar(stat = "identity", alpha = 0.5) +
ggtitle("Age car") +
labs(x = "", y = "Claim Severity") +
theme(plot.title = element_text(hjust = 0.5))
#### 2.2.3 Gender of policyholder ####
severity_by_sex <- Data_no_out %>%
group_by(sexp) %>%
summarize(Claim_sev = sum(chargtot) / sum(nbrtotc))
severity_by_sex
Sev.sex <- ggplot(severity_by_sex, aes(x = sexp, y = Claim_sev)) +
theme_bw() +
geom_bar(stat = "identity", alpha = .5) +
ggtitle("Gender") +
labs(x = "", y = "Claim Severity") +
theme(plot.title = element_text(hjust = 0.5))
#### 2.2.4 Type of fuel ####
severity_by_fuel <- Data_no_out %>%
group_by(fuelc) %>%
summarize(Claim_sev = sum(chargtot) / sum(nbrtotc))
severity_by_fuel
Sev.fuel <- ggplot(severity_by_fuel, aes(x = fuelc, y = Claim_sev)) +
theme_bw() +
geom_bar(stat = "identity", alpha = .5) +
ggtitle("Fuel type") +
labs(x = "", y = "Claim Severity") +
theme(plot.title = element_text(hjust = 0.5))
#### 2.2.5 Frequency premium ####
severity_by_split <- Data_no_out %>%
group_by(split) %>%
summarize(Claim_sev = sum(chargtot) / sum(nbrtotc))
severity_by_split
Sev.split <- ggplot(severity_by_split, aes(x = split, y = Claim_sev)) +
theme_bw() +
geom_bar(stat = "identity", alpha = .5) +
ggtitle("Claim split") +
labs(x = "", y = "Claim Severity") +
theme(plot.title = element_text(hjust = 0.5))
#### 2.2.6 Use of Car ####
severity_by_use <- Data_no_out %>%
group_by(usec) %>%
summarize(Claim_sev = sum(chargtot) / sum(nbrtotc))
severity_by_use
Sev.use <- ggplot(severity_by_use, aes(x = usec, y = Claim_sev)) +
theme_bw() +
geom_bar(stat = "identity", alpha = .5) +
ggtitle("Use of the car") +
labs(x = "", y = "Claim Severity") +
theme(plot.title = element_text(hjust = 0.5))
#### 2.2.7 Fleet ####
severity_by_fleet <- Data_no_out %>%
group_by(fleetc) %>%
summarize(Claim_sev = sum(chargtot) / sum(nbrtotc))
severity_by_fleet
Sev.fleet <- ggplot(severity_by_fleet, aes(x = fleetc, y = Claim_sev)) +
theme_bw() +
geom_bar(stat = "identity", alpha = .5) +
ggtitle("Fleet type") +
labs(x = "", y = "Claim Severity") +
theme(plot.title = element_text(hjust = 0.5))
#### 2.2.8 Sportcar ####
severity_by_sport <- Data_no_out %>%
group_by(sportc) %>%
summarize(Claim_sev = sum(chargtot) / sum(nbrtotc))
severity_by_sport
Sev.sportc <- ggplot(severity_by_sport, aes(x = sportc, y = Claim_sev)) +
theme_bw() +
geom_bar(stat = "identity", alpha = .5) +
ggtitle("Sport type") +
labs(x = "", y = "Claim Severity") +
theme(plot.title = element_text(hjust = 0.5))
#### 2.2.9 Coverage type ####
severity_by_cover <- Data_no_out %>%
group_by(coverp) %>%
summarize(Claim_sev = sum(chargtot) / sum(nbrtotc))
severity_by_cover
Sev.cover <- ggplot(severity_by_cover, aes(x = coverp, y = avg_freq)) +
theme_bw() +
geom_bar(stat = "identity", alpha = .5) +
ggtitle("Coverage") +
labs(x = "", y = "Claim Severity") +
theme(plot.title = element_text(hjust = 0.5))
#### 2.2.10 Horsepower of the car ####
severity_by_power <- Data_no_out %>%
group_by(powerc) %>%
summarize(Claim_sev = sum(chargtot) / sum(nbrtotc))
severity_by_power
Sev.power <- ggplot(severity_by_power, aes(x = powerc, y = Claim_sev)) +
theme_bw() +
geom_bar(stat = "identity", alpha = .5) +
ggtitle("Horsepower") +
labs(x = "", y = "Claim Severity") +
theme(plot.title = element_text(hjust = 0.5))
#### 2.2.11 Location of policyholder ####
# municipal level
severity_by_Location <- Data_no_out %>%
select(LONG, LAT,severity)
Sev.location <- ggplot(severity_by_Location, aes(x = LONG, y = LAT, size = severity)) +
geom_point(alpha = 0.5) +
labs(title = "Claim severity by location (municipal)") +
scale_size(range = c(1, 10),
labels = function(x) sprintf("%.1f", x))
frequency_by_Commune <- DataFreq %>%
group_by(COMMUNE) %>%
summarize(avg_freq = sum(nbrtotc)/sum(duree))
# province level
# limit the link
DataSev_INS1 <- Data_no_out %>%
mutate(INS = ifelse(substr(INS, 1, 1) == "2",
ifelse(substr(INS, 1, 2) == "21", "21",
ifelse(substr(INS, 1, 2) %in% c("23", "24"), "23",
ifelse(substr(INS, 1, 2) == "25", "25", "2"))),
substr(INS, 1, 1)))
INS_Sev <- DataSev_INS1 %>%
group_by(INS) %>%
summarise(Claim_sev = sum(chargtot) / sum(nbrtotc))
# Define the mapping dataset for Belgium provinces
province_mapping <- data.frame(INS = c("1","21","23", "25", "3", "4", "5", "6", "7", "8", "9"),
Province = c("Antwerp", "Brussels Capital Region", "Flemish Brabant", "Walloon Brabant", "West Flanders",
"East flanders", "Hainaut", "Liége",
"Limburg", "Luxembourg", "Namur"))
# Merge the mapping dataset with INS_freq based on the INS column
INS_sev_with_province <- merge(INS_Sev, province_mapping, by = "INS")
print(INS_sev_with_province)
#### Plot Severity graphs  ####
grid.arrange(Sev.age, nrow = 1)
grid.arrange(Sev.agecar, Sev.sex, Sev.fuel, Sev.split, Sev.use, Sev.fleet, Sev.sportc, Sev.cover, Sev.power, nrow = 3)
grid.arrange(Sev.location, nrow = 1)
############ Section 2.3 Check for relationship between two variables ############
#### 2.3.1 Between age policy holder and age car ####
age_policyholder <- Data$AGEPH
age_car <- Data$agecar
df <- data.frame(age_policyholder, age_car)
# create a function to convert age_car to a numeric variable
age_car_numeric <- function(age_car) {
ifelse(age_car == "0-1", 0.5,
ifelse(age_car == "2-5", 3.5,
ifelse(age_car == "6-10", 8,
ifelse(age_car == ">10", 11.5, NA))))
}
df$age_car_numeric <- age_car_numeric(df$age_car)
# calculate the correlation
cor(df$age_policyholder, df$age_car_numeric)
cor_result <- cor.test(df$age_policyholder, df$age_car_numeric, method = "pearson", conf.level = 0.95)
# print the correlation coefficient and its confidence interval
cat("Correlation coefficient:", round(cor_result$estimate, 4), "\n") #0.03325993 there is a  very (weak) positive correlation btwn age of policyholder and age of car)
cat("95% confidence interval:", round(cor_result$conf.int, 4), "\n")
#### 2.3.2 Between Sport Car and Horse Power ####
df <- data.frame(Data$sportc, Data$powerc)
# convert the string variables to numeric values
df$sport_car_numeric <- ifelse(df$Data.sportc == 'Yes', 1, 0)
df$power_car_numeric <- ifelse(df$Data.powerc == '<66', 0,
ifelse(df$Data.powerc == '66-110', 1, 2))
cor(df)
df
sport_car_numeric <- ifelse(df$Data.sportc == 'Yes', 1, 0)
sport_car_numeric
severity_by_sex <- Data_no_out %>%
group_by(sexp) %>%
summarize(Claim_sev = sum(chargtot) / sum(nbrtotc))
severity_by_sex
df <- data.frame(Data$sportc, Data$powerc, Data$fuelc,Data$sexp)
df$fuel_type_numeric <- ifelse(df$Data.sexp == 'Male', 1, 0)
Data$split
df$split_numeric <- ifelse(df$Data.split == '<Once', 0,
ifelse(df$Data.powerc == 'Twice', 1,
ifelse(df$Data.powerc == 'Thrice', 2, 3)))
df <- data.frame(age_policyholder,age_car,Data$sexp, Data$fuelc, Data$split, Data$sportc, Data$powerc, Data$fuelc,Data$sexp)
df$split_numeric <- ifelse(df$Data.split == '<Once', 0,
ifelse(df$Data.powerc == 'Twice', 1,
ifelse(df$Data.powerc == 'Thrice', 2, 3)))
df <- data.frame(age_policyholder,age_car,Data$sexp, Data$fuelc, Data$split, Data$usec, Data$sportc, Data$powerc)
df
df$sport_car_numeric <- ifelse(df$Data.split == 'Private', 1, 0)
df$usec_numeric <- ifelse(df$Data.usec == 'Private', 1, 0)
df$power_car_numeric <- ifelse(df$Data.powerc == '<66', 0,
ifelse(df$Data.powerc == '66-110', 1, 2))
df$usec_numeric
df <- data.frame(age_policyholder,age_car,Data$sexp, Data$fuelc, Data$split, Data$usec, Data$fleet, Data$sportc, Data$powerc)
df
df <- data.frame(age_policyholder,age_car,Data$sexp, Data$fuelc, Data$split, Data$usec, Data$fleet, Data$sportc, Data$powerc)
# convert the string variables to numeric values
age_car_numeric <- function(age_car) {
ifelse(age_car == "0-1", 0.5,
ifelse(age_car == "2-5", 3.5,
ifelse(age_car == "6-10", 8,
ifelse(age_car == ">10", 11.5, NA))))
}
df$age_car_numeric <- age_car_numeric(df$age_car)
df$gender_numeric <- ifelse(df$Data.sexp == 'Male', 1, 0)
df$fuel_type_numeric <- ifelse(df$Data.fuelc == 'Gasoil', 1, 0)
df$split_numeric <- ifelse(df$Data.split == '<Once', 0,
ifelse(df$Data.powerc == 'Twice', 1,
ifelse(df$Data.powerc == 'Thrice', 2, 3)))
df$usec_numeric <- ifelse(df$Data.usec == 'Private', 1, 0)
df$Fleet_numeric <- ifelse(df$Data.usec == 'yes', 1, 0)
df$sport_car_numeric <- ifelse(df$Data.sportc == 'Yes', 1, 0)
df$power_car_numeric <- ifelse(df$Data.powerc == '<66', 0,
ifelse(df$Data.powerc == '66-110', 1, 2))
df <- data.frame(age_policyholder,age_car,Data$sexp, Data$fuelc, Data$split, Data$usec, Data$fleet, Data$sportc, Data$powerc, Data$coverp)
df
df <- data.frame(age_policyholder,age_car,Data$sexp, Data$fuelc, Data$split, Data$usec, Data$fleet, Data$sportc, Data$powerc, Data$coverp)
# convert the string variables to numeric values
age_car_numeric <- function(age_car) {
ifelse(age_car == "0-1", 0.5,
ifelse(age_car == "2-5", 3.5,
ifelse(age_car == "6-10", 8,
ifelse(age_car == ">10", 11.5, NA))))
}
df$age_car_numeric <- age_car_numeric(df$age_car)
df$gender_numeric <- ifelse(df$Data.sexp == 'Male', 1, 0)
df$fuel_type_numeric <- ifelse(df$Data.fuelc == 'Gasoil', 1, 0)
df$split_numeric <- ifelse(df$Data.split == '<Once', 0,
ifelse(df$Data.split == 'Twice', 1,
ifelse(df$Data.split == 'Thrice', 2, 3)))
df$usec_numeric <- ifelse(df$Data.usec == 'Private', 1, 0)
df$Fleet_numeric <- ifelse(df$Data.usec == 'yes', 1, 0)
df$sport_car_numeric <- ifelse(df$Data.sportc == 'Yes', 1, 0)
df$power_car_numeric <- ifelse(df$Data.powerc == '<66', 0,
ifelse(df$Data.powerc == '66-110', 1, 2))
df$power_car_numeric <- ifelse(df$Data.coverpc == '<MTPL', 0,
ifelse(df$Data.coverpc == 'MTPL+', 1, 2))
df <- data.frame(age_policyholder,age_car,Data$sexp, Data$fuelc, Data$split, Data$usec, Data$fleet, Data$sportc, Data$powerc, Data$coverp)
df
age_car_numeric <- function(age_car) {
ifelse(age_car == "0-1", 0.5,
ifelse(age_car == "2-5", 3.5,
ifelse(age_car == "6-10", 8,
ifelse(age_car == ">10", 11.5, NA))))
}
df$age_car_numeric <- age_car_numeric(df$age_car)
df$gender_numeric <- ifelse(df$Data.sexp == 'Male', 1, 0)
df$fuel_type_numeric <- ifelse(df$Data.fuelc == 'Gasoil', 1, 0)
df$split_numeric <- ifelse(df$Data.split == '<Once', 0,
ifelse(df$Data.split == 'Twice', 1,
ifelse(df$Data.split == 'Thrice', 2, 3)))
df$usec_numeric <- ifelse(df$Data.usec == 'Private', 1, 0)
df$Fleet_numeric <- ifelse(df$Data.usec == 'yes', 1, 0)
df$sport_car_numeric <- ifelse(df$Data.sportc == 'Yes', 1, 0)
df$power_car_numeric <- ifelse(df$Data.powerc == '<66', 0,
ifelse(df$Data.powerc == '66-110', 1, 2))
df$coverage_numeric <- ifelse(df$Data.coverpc == '<MTPL', 0,
ifelse(df$Data.coverpc == 'MTPL+', 1, 2))
df$coverage_numeric <- ifelse(df$Data.coverp == '<MTPL', 0,
ifelse(df$Data.coverp == 'MTPL+', 1, 2))
df$coverage_numeric
df <- data.frame(age_policyholder,age_car,Data$sexp, Data$fuelc, Data$split, Data$usec, Data$fleet, Data$sportc, Data$powerc, Data$coverp)
# convert the string variables to numeric values
age_car_numeric <- function(age_car) {
ifelse(age_car == "0-1", 0.5,
ifelse(age_car == "2-5", 3.5,
ifelse(age_car == "6-10", 8,
ifelse(age_car == ">10", 11.5, NA))))
}
df$age_car_numeric <- age_car_numeric(df$age_car)
df$gender_numeric <- ifelse(df$Data.sexp == 'Male', 1, 0)
df$fuel_type_numeric <- ifelse(df$Data.fuelc == 'Gasoil', 1, 0)
df$split_numeric <- ifelse(df$Data.split == '<Once', 0,
ifelse(df$Data.split == 'Twice', 1,
ifelse(df$Data.split == 'Thrice', 2, 3)))
df$usec_numeric <- ifelse(df$Data.usec == 'Private', 1, 0)
df$Fleet_numeric <- ifelse(df$Data.usec == 'yes', 1, 0)
df$sport_car_numeric <- ifelse(df$Data.sportc == 'Yes', 1, 0)
df$coverage_numeric <- ifelse(df$Data.coverp == '<MTPL', 0,
ifelse(df$Data.coverp == 'MTPL+', 1, 2))
df$power_car_numeric <- ifelse(df$Data.powerc == '<66', 0,
ifelse(df$Data.powerc == '66-110', 1, 2))
summary(df)
cor(df)
df <- data.frame(age_policyholder,age_car,Data$sexp, Data$fuelc, Data$split, Data$usec, Data$fleet, Data$sportc, Data$powerc, Data$coverp)
# convert the string variables to numeric values
age_car_numeric <- function(age_car) {
ifelse(age_car == "0-1", 0.5,
ifelse(age_car == "2-5", 3.5,
ifelse(age_car == "6-10", 8,
ifelse(age_car == ">10", 11.5, NA))))
}
df$age_car_numeric <- age_car_numeric(df$age_car)
df$gender_numeric <- ifelse(df$Data.sexp == 'Male', 1, 0)
df$fuel_type_numeric <- ifelse(df$Data.fuelc == 'Gasoil', 1, 0)
df$split_numeric <- ifelse(df$Data.split == '<Once', 0,
ifelse(df$Data.split == 'Twice', 1,
ifelse(df$Data.split == 'Thrice', 2, 3)))
df$usec_numeric <- ifelse(df$Data.usec == 'Private', 1, 0)
df$Fleet_numeric <- ifelse(df$Data.usec == 'yes', 1, 0)
df$sport_car_numeric <- ifelse(df$Data.sportc == 'Yes', 1, 0)
df$coverage_numeric <- ifelse(df$Data.coverp == '<MTPL', 0,
ifelse(df$Data.coverp == 'MTPL+', 1, 2))
df$power_car_numeric <- ifelse(df$Data.powerc == '<66', 0,
ifelse(df$Data.powerc == '66-110', 1, 2))
correlation_table <- cor(df[, c("age_policyholder", "age_car_numeric", "gender_numeric", "fuel_type_numeric",
"split_numeric", "usec_numeric", "Fleet_numeric", "sport_car_numeric",
"power_car_numeric", "coverage_numeric")])
print(correlation_table)
#### 2.3.2 Between Sport Car and Horse Power ####
df <- data.frame(age_policyholder,age_car,Data$sexp, Data$fuelc, Data$split, Data$usec, Data$fleet, Data$sportc, Data$powerc, Data$coverp)
# convert the string variables to numeric values
age_car_numeric <- function(age_car) {
ifelse(age_car == "0-1", 0.5,
ifelse(age_car == "2-5", 3.5,
ifelse(age_car == "6-10", 8,
ifelse(age_car == ">10", 11.5, NA))))
}
df$age_car_numeric <- age_car_numeric(df$age_car)
df$gender_numeric <- ifelse(df$Data.sexp == 'Male', 1, 0)
df$fuel_type_numeric <- ifelse(df$Data.fleet == 'Gasoil', 1, 0)
df$split_numeric <- ifelse(df$Data.split == '<Once', 0,
ifelse(df$Data.split == 'Twice', 1,
ifelse(df$Data.split == 'Thrice', 2, 3)))
df$usec_numeric <- ifelse(df$Data.usec == 'Private', 1, 0)
df$Fleet_numeric <- ifelse(df$Data.usec == 'yes', 1, 0)
df$sport_car_numeric <- ifelse(df$Data.sportc == 'Yes', 1, 0)
df$coverage_numeric <- ifelse(df$Data.coverp == '<MTPL', 0,
ifelse(df$Data.coverp == 'MTPL+', 1, 2))
df$power_car_numeric <- ifelse(df$Data.powerc == '<66', 0,
ifelse(df$Data.powerc == '66-110', 1, 2))
correlation_table <- cor(df[, c("age_policyholder", "age_car_numeric", "gender_numeric", "fuel_type_numeric",
"split_numeric", "usec_numeric", "Fleet_numeric", "sport_car_numeric",
"power_car_numeric", "coverage_numeric")])
print(correlation_table)
df <- data.frame(Data$fuelc, Data$powerc)
# convert the string variables to numeric values
df$fuel_type_numeric <- ifelse(df$Data.fuelc == 'Gasoil', 1, 0)
df$power_car_numeric <- ifelse(df$Data.powerc == '<66', 0,
ifelse(df$Data.powerc == '66-110', 1, 2))
summary(df)
# calculate the correlation
cor(df$fuel_type_numeric, df$power_car_numeric)
cor_result <- cor.test(df$fuel_type_numeric, df$power_car_numeric, method = "pearson", conf.level = 0.95)
# print the correlation coefficient and its confidence interval
cat("Correlation coefficient:", round(cor_result$estimate, 4), "\n") #-0.0904  there is almost no correlation btwn power and fuel type)
cat("95% confidence interval:", round(cor_result$conf.int, 4), "\n")
####   ####   ####   ####   ####   ####   #### ####   ####   ####   ####   ####   ####   ####   ####   ####
####   ####   ####   ####   ####   ####   ####   ####   ####   ####   ####   ####   ####   ####   ####   ####
#### 2.3.2 Between Sport Car and Horse Power ####
df <- data.frame(age_policyholder,age_car,Data$sexp, Data$fuelc, Data$split, Data$usec, Data$fleet, Data$sportc, Data$powerc, Data$coverp)
# convert the string variables to numeric values
age_car_numeric <- function(age_car) {
ifelse(age_car == "0-1", 0.5,
ifelse(age_car == "2-5", 3.5,
ifelse(age_car == "6-10", 8,
ifelse(age_car == ">10", 11.5, NA))))
}
df$age_car_numeric <- age_car_numeric(df$age_car)
df$gender_numeric <- ifelse(df$Data.sexp == 'Male', 1, 0)
df$fuel_type_numeric <- ifelse(df$Data.fuelc == 'Gasoil', 1, 0)
df$split_numeric <- ifelse(df$Data.split == '<Once', 0,
ifelse(df$Data.split == 'Twice', 1,
ifelse(df$Data.split == 'Thrice', 2, 3)))
df$usec_numeric <- ifelse(df$Data.usec == 'Private', 1, 0)
df$Fleet_numeric <- ifelse(df$Data.fleet == 'yes', 1, 0)
df$sport_car_numeric <- ifelse(df$Data.sportc == 'Yes', 1, 0)
df$coverage_numeric <- ifelse(df$Data.coverp == '<MTPL', 0,
ifelse(df$Data.coverp == 'MTPL+', 1, 2))
df$power_car_numeric <- ifelse(df$Data.powerc == '<66', 0,
ifelse(df$Data.powerc == '66-110', 1, 2))
correlation_table <- cor(df[, c("age_policyholder", "age_car_numeric", "gender_numeric", "fuel_type_numeric",
"split_numeric", "usec_numeric", "Fleet_numeric", "sport_car_numeric",
"power_car_numeric", "coverage_numeric")])
print(correlation_table)
df$Fleet_numeric
Data.fleet
df
df <- data.frame(age_policyholder,age_car,Data$sexp, Data$fuelc, Data$split, Data$usec, Data$fleet, Data$sportc, Data$powerc, Data$coverp)
# convert the string variables to numeric values
age_car_numeric <- function(age_car) {
ifelse(age_car == "0-1", 0.5,
ifelse(age_car == "2-5", 3.5,
ifelse(age_car == "6-10", 8,
ifelse(age_car == ">10", 11.5, NA))))
}
df$age_car_numeric <- age_car_numeric(df$age_car)
df$gender_numeric <- ifelse(df$Data.sexp == 'Male', 1, 0)
df$fuel_type_numeric <- ifelse(df$Data.fuelc == 'Gasoil', 1, 0)
df$split_numeric <- ifelse(df$Data.split == '<Once', 0,
ifelse(df$Data.split == 'Twice', 1,
ifelse(df$Data.split == 'Thrice', 2, 3)))
df$usec_numeric <- ifelse(df$Data.usec == 'Private', 1, 0)
df$Fleet_numeric <- ifelse(df$Data.fleet == 'Yes', 1, 0)
df$sport_car_numeric <- ifelse(df$Data.sportc == 'Yes', 1, 0)
df$coverage_numeric <- ifelse(df$Data.coverp == '<MTPL', 0,
ifelse(df$Data.coverp == 'MTPL+', 1, 2))
df$power_car_numeric <- ifelse(df$Data.powerc == '<66', 0,
ifelse(df$Data.powerc == '66-110', 1, 2))
correlation_table <- cor(df[, c("age_policyholder", "age_car_numeric", "gender_numeric", "fuel_type_numeric",
"split_numeric", "usec_numeric", "Fleet_numeric", "sport_car_numeric",
"power_car_numeric", "coverage_numeric")])
print(correlation_table)
############ Section 2.3 Correlation matrix ############
df <- data.frame(age_policyholder,age_car,Data$sexp, Data$fuelc, Data$split, Data$usec, Data$fleet, Data$sportc, Data$powerc, Data$coverp)
# convert the string variables to numeric values
age_car_numeric <- function(age_car) {
ifelse(age_car == "0-1", 0.5,
ifelse(age_car == "2-5", 3.5,
ifelse(age_car == "6-10", 8,
ifelse(age_car == ">10", 11.5, NA))))
}
df$age_car_numeric <- age_car_numeric(df$age_car)
df$gender_numeric <- ifelse(df$Data.sexp == 'Male', 1, 0)
df$fuel_type_numeric <- ifelse(df$Data.fuelc == 'Gasoil', 1, 0)
df$split_numeric <- ifelse(df$Data.split == '<Once', 0,
ifelse(df$Data.split == 'Twice', 1,
ifelse(df$Data.split == 'Thrice', 2, 3)))
df$usec_numeric <- ifelse(df$Data.usec == 'Private', 1, 0)
df$Fleet_numeric <- ifelse(df$Data.fleet == 'Yes', 1, 0)
df$sport_car_numeric <- ifelse(df$Data.sportc == 'Yes', 1, 0)
df$coverage_numeric <- ifelse(df$Data.coverp == '<MTPL', 0,
ifelse(df$Data.coverp == 'MTPL+', 1, 2))
df$power_car_numeric <- ifelse(df$Data.powerc == '<66', 0,
ifelse(df$Data.powerc == '66-110', 1, 2))
correlation_table <- cor(df[, c("age_policyholder", "age_car_numeric", "gender_numeric", "fuel_type_numeric",
"split_numeric", "usec_numeric", "Fleet_numeric", "sport_car_numeric",
"power_car_numeric", "coverage_numeric")])
print(correlation_table)
correlation_table <- round(cor(df[, c("age_policyholder", "age_car_numeric", "gender_numeric", "fuel_type_numeric",
"split_numeric", "usec_numeric", "Fleet_numeric", "sport_car_numeric",
"power_car_numeric", "coverage_numeric")]), 4)
print(correlation_table)
